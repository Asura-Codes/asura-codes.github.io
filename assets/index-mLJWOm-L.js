const e={failed:"Action failed",success:"Action was successful",portfolio:"Portfolio",darkMode:"Toggle Dark Mode",language:"Language",languageEnglish:"English",languagePolish:"Polski",selectLanguage:"Select language"},a={navigation:"Navigation",home:"Home",github:"Works",work:"Work experience",stack:"Technology stack",contact:"Resume / Contact"},o={builtWith:"Built with Quasar v{version}, Vue 3, TypeScript",stackTech:"Stack: Quasar, Vue 3, TypeScript, i18n"},t={title:"Welcome to My Portfolio",jobTitle:"Full-stack Developer",jobSubtitle:"I make reliable solutions in C++, TypeScript, Python, Go, and .NET. My main professional goal has always been to integrate old industrial systems with new technologies.",aboutMe:"About Me",aboutIntro:"As a software developer, I enjoy solving technical problems and making solutions that people can count on.  My experience ranges from low-level system architecture to modern web technologies.",aboutJourney:"I've had the chance to work on important projects in industrial automation and real-time systems throughout my career. Whether I was designing SCADA systems, implementing data acquisition solutions, or making user-friendly interfaces, each project has taught me something new and helped me grow.",areasTitle:"Areas I've Had the Opportunity to Work In",contactMe:"Contact Me",technologyIcons:[{name:"mdi-language-cpp",title:"C++17/20"},{name:"mdi-widgets",title:"Qt 6 Framework"},{name:"mdi-language-go",title:"Go"},{name:"mdi-docker",title:"Docker"},{name:"mdi-language-python",title:"Python"},{name:"mdi-nodejs",title:"Node.js"},{name:"mdi-vuejs",title:"Vue.js"},{name:"mdi-database",title:"MongoDB, SQLite"},{name:"mdi-code-json",title:"JSON/APIs"},{name:"mdi-lightning-bolt",title:"MQTT, ZeroMQ"},{name:"mdi-memory",title:"Low-Level Systems"},{name:"mdi-cogs",title:"CMake, vcpkg"}],knowledgeCards:[{id:"systemArchitecture",title:"System Architecture",description:"I've worked on scalable, modular power plant systems. I work with distributed systems, microservices, and event-driven architectures that prioritize dependability and performance in mission-critical environments.",benefits:"Technical Skills:",benefitsDesc:"C++17/20, Go, event-driven programming, microservice design, concurrent programming, shared memory architectures, Docker containerization",icon:"mdi-hexagon-multiple"},{id:"dataEngineering",title:"Data Management",description:"Created and put into action systems for gathering, processing, and storing industrial time-series data. My solutions include effective storage methods for both current and past data access, along with strong guarantees of data integrity.",benefits:"Technical Skills:",benefitsDesc:"Database design (SQL & NoSQL), custom file-mapped storage, time-series data handling, multi-threaded data access patterns, MongoDB, SQLite, ObjectBox, RethinkDB, PostgreSQL",icon:"mdi-database"},{id:"uiDevelopment",title:"Interface Development",description:"Used both desktop and web technologies to make graphical interfaces for industrial systems. These interfaces let operators see complicated processes, set up systems, and work with data from equipment.",benefits:"Technical Skills:",benefitsDesc:"Qt, MFC, Vue.js, Model-View-Controller implementations, cross-platform development, BCGControlBar Pro, internationalization",icon:"mdi-monitor-dashboard"},{id:"communicationProtocols",title:"Communication Systems",description:"Used different messaging and communication protocols to send and receive data in real time in industrial settings. I make sure that field devices, backend services, and user interfaces can all work together in safe and efficient ways.",benefits:"Technical Skills:",benefitsDesc:"MQTT, ZeroMQ, WebSockets, REST APIs, industrial protocols (Modbus, IEC104, Siemens S7), TCP/IP networking, secure API design (JWT)",icon:"mdi-access-point-network"},{id:"systemIntegration",title:"System Integration",description:"Specialized in connecting old industrial systems with new technologies. As part of my integration work, I convert binary formats, translate protocols, and make middleware components that can work with each other.",benefits:"Technical Skills:",benefitsDesc:"C#/.NET integration with native code, multi-language systems (C++/Go/C#), binary deserialization, character encoding conversion, API gateway development",icon:"mdi-puzzle"}]},n={title:"My Work",projectsTitle:"Projects",experienceTitle:"Experience",pageTitle:"Industrial Software Development",pageSubtitle:"Sturdy software for data systems, automation, and critical infrastructure",btnDetails:"Details",btnClose:"Close",keyFeatures:"Key Features:",technologiesUsed:"Technologies Used:",projectSize:"Project Size:",sizes:{large:"Large",medium:"Medium",small:"Small"},sizeTooltips:{large:"Complex project with extensive scope and multiple components",medium:"Moderate complexity with balanced development effort",small:"Focused project with limited scope"},difficultyScale:"Project complexity rating (1-3)",sizeNotSpecified:"Size not specified",sizeNotSpecifiedTooltip:"Project size information is not available",categories:{softwareFramework:"Software Framework",dataSystems:"Data Systems",iotEdge:"IoT & Edge",apiIntegration:"API & Integration",modernization:"Modernization",realTimeSystems:"Real-Time Systems",industrialSolutions:"Industrial Solutions"},projects:[{title:"SCADA System",tech:"C++20, Qt 6, Event-Driven Architecture",keywords:"Real-Time Control, MQTT, ZeroMQ, Alarm Management, Thread Safety",description:"I helped create a modular industrial automation control and monitoring system. The system reliably handles binary and analog signals thanks to its event-driven architecture. It has tools for managing alarms, dynamic configuration, and industrial process visualization.",size:"large",keyFeatures:[{title:"Event-Driven Architecture",desc:"To help guarantee dependable system responses, I worked on signal processing using validation, parsing, and queuing."},{title:"Real-Time Communication",desc:"MQTT and ZeroMQ were implemented to facilitate communication between field devices and backend servers."},{title:"Dynamic Configuration",desc:"Contributed to the development of the ability to load configuration without system interruption from shared memory and project files."},{title:"Alarm Management",desc:"Developed logic that uses configurable thresholds and state changes to identify and alert users to abnormal conditions."}],technologies:"C++20, Qt 6 (Widgets, Core, Network, SQL, Charts), BCGControlBar Pro, Boost (asio, serialization, fusion, interprocess, thread), Poco, MQTT (mosquitto), ZeroMQ, nlohmann::json, MongoDB C++ Driver, CMake, vcpkg"},{title:"Data Acquisition and Archiving System",tech:"C++20, Boost, Shared Memory, File-Mapped Storage",keywords:"Data Acquisition, Indexing, Thread Safety, Power Plant",description:"I contributed to the creation of a C++20-based system for gathering and storing power plant measurement data. For both real-time and historical access, the system was made to function well while preserving data integrity.",size:"large",keyFeatures:[{title:"Data Acquisition",desc:"Interfaces with plant sensors and control systems were developed in order to effectively gather analog and digital measurements."},{title:"Shared Memory Architecture",desc:"Shared memory to enable simultaneous access to data by several processes (acquisition, archiving, and visualization)."},{title:"Archiving Solution",desc:"Time-series data was stored using a file-mapped method to facilitate speedy retrieval by time period."},{title:"Data Integrity",desc:"Recovery capabilities and additional validation procedures have been added to help safeguard vital operational data."}],technologies:"C++20, Boost (Interprocess, Asio, DateTime), Poco (Net, Util), ZeroMQ (cppzmq), MQTT (Paho), nlohmann::json, Custom file-mapped storage, CMake"},{title:"Distributed SCADA Platform",tech:"C++20, Go, Docker, Microservices",keywords:"Legacy Data Modernization, Containerization, Secure APIs, SQLite, ObjectBox",description:"I contributed to the development of an operations communication platform that links contemporary and legacy systems. This included a Poco-based backend and a C++ service to handle legacy data, with an emphasis on ensuring the components functioned well together.",size:"large",keyFeatures:[{title:"Legacy Data Handling",desc:"Developed a C++20 program to translate character encoding in older industrial data files and convert them into more contemporary formats."},{title:"Microservice Approach",desc:"Assisting in the division of the platform into distinct containerized services for communication, storage, and core functions."},{title:"API Development",desc:"Developed RESTful APIs with WebSocket support for real-time updates and authentication using JWT and API keys."},{title:"Storage Solutions",desc:"To strike a balance between flexibility and performance requirements, ObjectBox was used for event logging and SQLite for configuration settings."}],technologies:"Go (Gin), C++20, Docker, SQLite, ObjectBox, REST APIs, WebSockets, JWT, Poco, nlohmann::json, OpenAPI/Swagger"},{title:"Graphical Editor for SCADA Schematics",tech:"C++17, Qt, Boost, Model-View Architecture",keywords:"Industrial Framework, Component Architecture, Multi-Platform",description:"I developed a graphical editor for interfaces of industrial control systems. Using an intuitive design approach, the application assists operators in producing visual representations of their equipment and processes.",size:"medium",keyFeatures:[{title:"Interactive Editing",desc:"Developed tools for building and modifying visual models that allow for property configuration, grouping, and manipulation."},{title:"Data Serialization",desc:"Boost was used to implement XML-based loading and saving.Project data will be preserved across sessions with PropertyTree."},{title:"Cross-Platform Support",desc:"Assisted in making sure the program functions dependably on both specialized embedded platforms and Windows systems."},{title:"Clean Architecture",desc:"Model-View design patterns were used to divide issues and make the code easier to maintain."}],technologies:"C++17, Qt (Widgets, Signals & Slots), Boost (Bimap, MPL, Serialization, Lexical_Cast, Algorithm), CMake, vcpkg"},{title:"Middleware API for REST and Proprietary Protocol Bridging",tech:".NET Framework, C#, Native Interop",keywords:"REST Bridge, Proprietary Protocol, Device Communication",description:"Created a middleware solution to connect modern web applications with specialized industrial systems using their proprietary protocols. The API translates between standard REST requests and the specific communication methods needed by the hardware.",size:"small",keyFeatures:[{title:"Native Integration",desc:"Used P/Invoke to connect .NET code with existing C++ device libraries, allowing for efficient data exchange."},{title:"Configurable Connections",desc:"Built a system to manage connection settings through Web.config for adaptable deployment in different environments."},{title:"Data Structure Mapping",desc:"Created C# representations of native data structures with proper marshalling to maintain compatibility."},{title:"Optimized Data Handling",desc:"Implemented batching for signal processing to improve performance when dealing with large data sets."}],technologies:".NET Framework 4.8, C#, ASP.NET Web API, P/Invoke, Microsoft SQL Server, MariaDB/MySQL, Web.config"},{title:"Database Exploration Tool",tech:"C++20, MFC, BCGControlBar Pro, SQLite",keywords:"Database Management, SQL Editor, Data Visualization, MDI Architecture",description:"I created a desktop application to facilitate SQLite database interaction. Through an interface that allows working with multiple database views at once, the tool offers an easy-to-use method for viewing data, running queries, and visualizing results.",size:"medium",keyFeatures:[{title:"Multi-Document Interface",desc:"Developed an interface that enables users to manipulate query results, tables, and charts in different application windows."},{title:"Database Connection Manager",desc:"Developed features to store and control database connection configurations for simpler access to various data sources."},{title:"SQL Query Editor",desc:"To improve query writing efficiency, a code editor was added with useful features like syntax highlighting and suggestions."},{title:"Flexible Architecture",desc:"To improve maintainability, the code was arranged to divide data access, business logic, and user interface components."}],technologies:"C++20, MFC (Microsoft Foundation Classes), BCGControlBar Pro, SQLite, WinSock, Visual Studio 2022"},{title:"Modular Data Acquisition Platform",tech:"C++17/20, Node.js, Vue.js, Docker, Microservices",keywords:"Protocol Integration, Edge Computing, Microservices, Frontend SPA, DevOps",description:"I helped develop a system that gathers and analyzes data from industrial machinery. The platform combines multiple technologies to provide a modern monitoring interface and a versatile solution that can be tailored to various measurement requirements.",size:"large",keyFeatures:[{title:"Distributed Design",desc:"Assisted in putting into place a system of interoperable containerized services that communicate with one another via ZeroMQ."},{title:"Hardware Integration",desc:"Developed C++ protocol adapters to connect to various industrial equipment types via both standard and unique protocols."},{title:"Backend Services",desc:"Developed the Node.js server, which offers configuration and data access APIs with appropriate security controls."},{title:"User Interface",desc:"Using Vue.js, a browser-based dashboard that shows real-time data and enables system management was developed."}],technologies:"C++17/20, Node.js (TypeScript, Express), Vue.js, Pinia, Bootstrap-Vue, ECharts, SQLite, MongoDB, RethinkDB, ZeroMQ, Docker, Snap7, libmodbus, JWT, WebSockets"}]},r={title:"My Technology Stack",frontendTitle:"Frontend",backendTitle:"Backend",databaseTitle:"Databases",toolsTitle:"Tools & DevOps",pageTitle:"Technology Stack & Expertise",introduction:"As a software developer, my main goal is to create reliable, high-performing solutions. I've worked on cross-platform GUI development, event-driven architecture, shared memory systems, and modern C++ (C++20/17). I've had the chance to put effective data archiving solutions into place and create distributed systems with real-time communication capabilities. An outline of my core competencies and technology stack is provided below. These were honed via a variety of software development projects, such as distributed control systems, cross-platform apps, and data acquisition and archiving solutions.",skillCards:[{id:"coreLanguages",title:"Core Programming Languages",skills:[{id:"cpp",name:"C++20 / C++17",description:"High-performance, type-safe, contemporary systems programming"},{id:"csharp",name:"C#",description:"Native interop, API design, and integration",subSkills:[{id:"aspNetWebApi",name:"ASP.NET Web API",description:"Building RESTful services"}]},{id:"typescript",name:"TypeScript / JavaScript",description:"Full-stack application development, including SPAs (Vue 2/3, Quasar, Bootstrap) and Node.js backend services."},{id:"python",name:"Python",description:"Backend services for general automation scripting, simulation."},{id:"nodejs",name:"Node.js",description:"Backend development for microservices, real-time apps, and API services, especially for Internet of Things platforms."},{id:"golang",name:"Go (Golang)",description:"Backend development for distributed systems and microservices architecture."}]},{id:"frameworks",title:"Key Frameworks & Libraries",skills:[{id:"qt",name:"Qt (Widgets, Signals/Slots)",description:"Cross-platform GUI, visualization, and user interaction for industrial control panels"},{id:"boost",name:"Boost Libraries",subSkills:[{id:"asio",name:"boost::asio",description:"Asynchronous I/O, networking, and coroutines"},{id:"serialization",name:"boost::serialization",description:"Object serialization and STL container stack construction"},{id:"interprocess",name:"boost::interprocess",description:"Shared memory and interprocess synchronization"},{id:"fusion",name:"boost::fusion, boost::mpl",description:"Heterogeneous containers and metaprogramming"},{id:"thread",name:"boost::thread / boost::mutex",description:"Threading and synchronization primitives"},{id:"container",name:"boost::container",description:"STL-compatible specialized containers"},{id:"bimap",name:"Boost.Bimap",description:"Bidirectional maps for efficient key-value lookups"},{id:"lexicalCast",name:"Boost.Lexical_Cast",description:"Type-safe conversions between strings and other types"},{id:"algorithm",name:"Boost.Algorithm",description:"Collection of generic algorithms for C++"},{id:"multiIndex",name:"boost::multi_index",description:"Containers with multiple search and sorting criteria"},{id:"propertyTree",name:"Boost.PropertyTree",description:"Storing and manipulating hierarchical data, especially XML serialization"},{id:"dateTime",name:"Boost.DateTime",description:"Date and time manipulation and calculations"}]},{id:"json",name:"nlohmann::json",description:"Modern C++ JSON parsing and serialization"},{id:"poco",name:"Poco Framework",description:"Threading, networking, HTTP/WebSocket servers, MQTT integration, and database abstraction"},{id:"messaging",name:"Messaging Systems",subSkills:[{id:"zeromq",name:"ZeroMQ (zmq, cppzmq)",description:"High-performance asynchronous messaging with patterns like DEALER/ROUTER"},{id:"mqtt",name:"MQTT (mosqpp, Paho)",description:"Publish/subscribe messaging protocol with Mosquitto C++ integration"}]},{id:"mongodb",name:"MongoDB C++ Driver (mongocxx)",description:"NoSQL database integration"},{id:"openssl",name:"OpenSSL",description:"Secure communication and asynchronous cryptographic operations"},{id:"iconvpp",name:"iconvpp",description:"Character encoding conversions for legacy systems integration (CP852 to UTF-8)"},{id:"sqlite",name:"SQLite with Poco Data",description:"Embedded database with ORM-like features for configuration management"},{id:"mfc",name:"MFC (Microsoft Foundation Classes)",description:"Windows desktop application development with MDI architecture"},{id:"bcgControlBar",name:"BCGControlBar Pro",description:"Advanced UI components for MFC applications including ribbons and dockable panels"},{id:"objectBox",name:"ObjectBox",description:"High-performance event logging and embedded database"},{id:"rethinkDb",name:"RethinkDB",description:"Optional NoSQL database for real-time applications"},{id:"eCharts",name:"ECharts",description:"Data visualization library for dashboards"},{id:"snap7",name:"Snap7",description:"Siemens S7 protocol library for industrial communication"},{id:"libmodbus",name:"libmodbus",description:"Modbus TCP protocol library for industrial devices"},{id:"proster",name:"Proster",description:"Custom protocol for industrial hardware integration"},{id:"bootstrapVue",name:"Bootstrap-Vue",description:"Frontend framework for responsive design in Vue.js applications"},{id:"pinia",name:"Pinia",description:"State management library for Vue.js applications"},{id:"expressJs",name:"Express.js",description:"Web framework for Node.js, used for building APIs"},{id:"socketIo",name:"Socket.IO",description:"Library for real-time, bidirectional communication"},{id:"ginGolang",name:"Gin (Go)",description:"HTTP web framework for building APIs in Go"}]},{id:"architecture",title:"Architectural & Technical Skills",skills:[{id:"eventDriven",name:"Event-Driven Architecture",description:"Designing and implementing systems that effectively handle, filter, and process analog and binary signals is known as event-driven architecture"},{id:"realTime",name:"Real-Time Communication",description:"Using messaging protocols to quickly gather data, send commands, and receive event notifications"},{id:"multithreading",name:"Multithreading & Concurrency",description:"Using mutexes, scoped locks, condition variables, and atomic operations to manage resources thread-safely"},{id:"sharedMemory",name:"Shared Memory Architecture",description:" Implementing high-performance shared memory segments to enable multiple processes to quickly and concurrently access real-time data is known as shared memory architecture"},{id:"fileMapped",name:"File-Mapped Storage",description:"Custom file-mapped indexing for effective archiving of substantial amounts of time-series data is known as file-mapped storage"},{id:"dynamicConfig",name:"Dynamic Configuration",description:"The ability to load and manage configuration information from project files and shared memory"},{id:"eventManagement",name:"Event & Alarm Management",description:"Using sophisticated logic to identify alarm states based on thresholds and state transitions is known as event and alarm management"},{id:"serialization",name:"Serialization & Data Conversion",description:"Data conversion and serialization, including binary deserialization and C-struct mapping, are processes that convert old binary data into contemporary structured data"},{id:"protocol",name:"Protocol Integration",description:" Support for multiple protocols (Modbus, Siemens, IEC104, SNMP, OPC UA) and the creation of custom protocols are examples of protocol integration"},{id:"dataIntegrity",name:"Data Integrity & Recovery",description:"Data Recovery & Integrity Methods for mission-critical applications' data recovery, backup, and validation"},{id:"crossPlatform",name:"Cross-Platform Development",description:"Writing code for embedded platforms (Compute Module), Linux, and Windows"},{id:"microservices",name:"Microservices Architecture",description:"Designing loosely coupled services that are each Docker-contained for scalability and maintainability is known as microservices architecture"},{id:"secureApis",name:"Secure API Design",description:'Implementing RESTful APIs with JWT authentication and API key security is known as "secure API design"'},{id:"modelView",name:"Model-View Architecture",description:"Data models, views, and controller logic are separated in a model-view architecture to improve maintainability"},{id:"nativeInterop",name:"Native Interoperability",description:"Calling native C++ functions from managed C# code using P/Invoke (DllImport)"}]},{id:"build",title:"Build, Tooling & DevOps",skills:[{id:"cmake",name:"CMake",description:"Cross-platform build system and project configuration"},{id:"vcpkg",name:"vcpkg",description:"C++ package manager for dependency installation and management"},{id:"vs",name:"Visual Studio 2022",description:"Primary IDE for C++/C# development"},{id:"platformSpecific",name:"Platform-Specific Integration",description:"Experience with Windows API for file and process management, threading, and event logging"},{id:"docker",name:"Docker",description:"Containerization for consistent deployment and service isolation"},{id:"fabric",name:"Fabric (Python)",description:"Automation scripts for deployment and service management"},{id:"systemd",name:"systemd",description:"Service management for Linux environments"},{id:"devcontainers",name:"VS Code Devcontainers",description:"Consistent and reproducible development environments using Docker"},{id:"swagger",name:"Swagger/OpenAPI",description:"API documentation and specification"},{id:"cicd",name:"CI/CD Pipelines",description:"Continuous integration and deployment workflows"},{id:"powershell",name:"PowerShell",description:"Scripting for Windows environments and automation"},{id:"make",name:"Make",description:"Build automation tool for Linux/Unix environments"}]},{id:"domain",title:"Domain Knowledge",skills:[{id:"softwareArch",name:"Software Architecture",description:"Creating dependable, modular systems for real-time control and monitoring"},{id:"dataAcquisition",name:"Data Acquisition",description:"Designing high-performance systems for dependable measurement data collection, processing, and long-term archiving is known as data acquisition"},{id:"appDev",name:"Application Development",description:"Application development is the process of putting solutions in place"},{id:"legacy",name:"Legacy System Modernization",description:"Legacy Converting legacy data files into contemporary, structured formats with character encoding translation is known as system modernization."},{id:"visualization",name:"Visualization Tools",description:"Development of graphical editors for data visualization, control panels, and process diagrams"},{id:"secure",name:"Secure Systems",description:"Putting in place tamper-evident, secure storage to meet audit and compliance standards"},{id:"crossPlatformDev",name:"Cross-Platform Development",description:"Creating cross-platform visualization and control systems"},{id:"dataManagement",name:"Data Management",description:"Specialized systems for gathering and tracking data"},{id:"industrialProtocols",name:"Industrial Protocol Integration",description:"Experience with hardware integration and industrial communication protocols"},{id:"databaseSystems",name:"Database Systems Design",description:"Designing database systems includes creating query interfaces and tools for database exploration"}]},{id:"projects",title:"Project Highlights",skills:[{id:"scada",name:"SCADA System",description:"used C++20 to create a modular, real-time industrial automation control and monitoring system. Features include thread-safe data handling, dynamic configuration, alarm management, event-driven signal processing architecture, real-time communication through MQTT and ZeroMQ, and a Qt-based graphical user interface (GUI) with visualization capabilities"},{id:"dataAcquisition",name:"Data Acquisition & Archiving System",description:"developed a C++20 system for gathering, analyzing, and storing power plant measurement data over an extended period of time. robust data integrity procedures, file-mapped storage for time-series data archiving, shared memory architecture for concurrent data access, and thorough indexing for quick time-range queries"},{id:"distributed",name:"Distributed SCADA Platform",description:"designed a scalable platform using a Go backend and a C++20 data ingestion service. Binary deserialization for modernizing legacy data, Docker containerization for microservices architecture, JWT for secure APIs, SQLite and ObjectBox for embedded storage, and OpenAPI/Swagger for automated documentation are some of the salient features"},{id:"visualization",name:"Graphical Editor for SCADA Schematics",description:"a cross-platform C++17 graphical editor for industrial control interfaces was created. The program comes with a model editor for making process diagrams and control panels, as well as Boost for XML serialization.Model-View architecture, PropertyTree, and cross-platform compatibility"},{id:"middleware",name:"Middleware API for Protocol Bridging",description:"a .NET Web API middleware between RESTful interfaces and proprietary protocols was developed as a middleware API for protocol bridging. Among the features are dynamic configuration, data structure marshalling, optimized batch processing, robust resource management, and native C++ interoperability through P/Invoke"},{id:"databaseTool",name:"Database Exploration Tool",description:"using MFC, a C++20 Windows desktop application for SQLite database administration was created. Data visualization features, database connection management, an integrated SQL editor, a Multi-Document Interface for multiple views, and sophisticated UI elements via BCGControlBar Pro are all included in the tool"},{id:"modularPlatform",name:"Modular Data Acquisition Platform",description:"designed a microservices-based industrial data collection system. Multiple protocol integrations (S7, Modbus, Proster), a TypeScript/Express.js API layer, MongoDB and SQLite storage, C++, Node.js, and Python services, and a Vue.js dashboard with real-time visualization are all included in the solution"}]},{id:"softSkills",title:"Soft Skills & Approach",skills:[{id:"cleanCode",name:"Clean, Maintainable Code",description:"The codebase is divided into distinct modules in accordance with best practices for concern separation"},{id:"modernCpp",name:"Modern C++ Features",description:"Proficiency in utilizing smart pointers, type safety, constexpr, and other contemporary C++ features to enhance code security"},{id:"modular",name:"Modular Architecture",description:"Designing extensible systems that can change to meet new needs is known as modular architecture"},{id:"reliability",name:"Reliability Focus",description:"Implementing thorough error handling, logging, and system recovery procedures is the focus of reliability"},{id:"performance",name:"Performance Optimization",description:"Proficiency in low-latency, high-performance systems for real-time applications"},{id:"ux",name:"User Experience",description:"Developing user-friendly interfaces for sophisticated software programs"},{id:"learning",name:"Continuous Learning",description:"Adapting to best practices and new technologies in quickly changing ecosystems"},{id:"crossDisciplinary",name:"Cross-Disciplinary Integration",description:"The capacity to collaborate across various platforms and programming languages to produce coherent solutions is known as cross-disciplinary integration"}]}]},s={title:"My Creative Projects & Original Content",description:"Explore the projects and resources I have crafted to express my creativity and passion for technology.",sections:{articles:"Articles & Resources",applications:"Projects"},articles:{title:"Articles & Resources",description:"Comprehensive articles and easy-to-use reference manuals for a range of development methodologies and technologies.",entries:[{title:"Remote GDB for Raspberry Pi",description:"Configure remote debugging with GDB for Raspberry Pi Compute Module 4.",topics:["Environment Setup","Configuration","Troubleshooting"],link:"https://pisanie.dev/cheetsheets/RemoteGDB/%C5%9Brodowisko-i-konfiguracja.html",language:"Polish"},{title:"Introduction to C Programming",description:"Comprehensive guide to C programming fundamentals.",topics:["Syntax","Memory Management","Standard Library"],link:"https://pisanie.dev/wprowadzenie-do-c/",language:"Polish"}]},applications:{title:"Projects",description:"Projects and code implementations I've developed to solve various challenges.",entries:[{title:"TypeScript with Vuetify 3 Block Components",description:"Building block-based interfaces with TypeScript and Vuetify 3.",technologies:["Vue 3","TypeScript","Vuetify 3","Vite","Emscripten","WebAssembly","Vitest","ESLint","Prettier","Monorepo"],topics:["Component Architecture","TypeScript Integration","Responsive Design","WebAssembly Integration","Monorepo Tooling","Testing & Linting"],link:"https://pisanie.dev/ts-vuetify3-blocks-vm/"},{title:"Thingiverse 3D Designs",description:"Collection of my original 3D printable designs and models published on Thingiverse.",technologies:["Blender","3D Modeling","Ultimaker","3D Printing"],topics:["Functional household items and gadgets","Creative solutions for everyday problems","Open-source designs for community use","Optimized for FDM 3D printing"],link:"https://www.thingiverse.com/asuracodes/designs"}]},viewResource:"View Resource",viewProject:"View Project",viewOnGitHub:"View on GitHub",languages:{english:{name:"English",flag:"🇬🇧"},polish:{name:"Polish",flag:"🇵🇱"},spanish:{name:"Spanish",flag:"🇪🇸"},german:{name:"German",flag:"🇩🇪"},french:{name:"French",flag:"🇫🇷"}}},c={title:"Contact Me",resumeTitle:"Resume",formTitle:"Get in Touch",nameLabel:"Name",emailLabel:"Email",messageLabel:"Message",submitButton:"Send Message",thankYouMessage:"Thank you for your message!",errorMessage:"An error occurred. Please try again later.",redirectInfo:"Submitting will redirect you to Google Forms to complete your message.",facebookCaption:"@asuracodes.site",linkedinCaption:"/in/asuracodes",githubCaption:"/Asura-Codes"},d={failed:e.failed,success:e.success,common:e,nav:a,footer:o,home:t,work:n,stack:r,github:s,contact:c},i={failed:"Akcja nieudana",success:"Akcja zakończona sukcesem",portfolio:"Portfolio",darkMode:"Przełącz tryb ciemny",language:"Język",languageEnglish:"English",languagePolish:"Polski",selectLanguage:"Wybierz język"},m={navigation:"Nawigacja",home:"Strona główna",github:"Twórczość",work:"Doświadczenie zawodowe",stack:"Stack technologiczny",contact:"Kontakt / CV"},l={builtWith:"Zbudowano z użyciem Quasar v{version}, Vue 3, TypeScript",stackTech:"Technologie: Quasar, Vue 3, TypeScript, i18n"},p={title:"Witaj w moim portfolio",jobTitle:"Programista Full-Stack",jobSubtitle:"Tworzę niezawodne rozwiązania w językach C++, TypeScript, Python, Go i .NET. Moim głównym celem zawodowym zawsze była integracja starych systemów przemysłowych z nowymi technologiami.",aboutMe:"O mnie",aboutIntro:"Jako programista lubię rozwiązywać problemy techniczne i tworzyć rozwiązania, na których ludzie mogą polegać. Moje doświadczenie obejmuje zarówno architekturę systemów niskiego poziomu, jak i nowoczesne technologie internetowe.",aboutJourney:"W trakcie mojej kariery zawodowej miałem okazję pracować nad ważnymi projektami z zakresu automatyki przemysłowej i systemów czasu rzeczywistego. Niezależnie od tego, czy zajmowałem się projektowaniem systemów SCADA, wdrażaniem rozwiązań do gromadzenia danych, czy tworzeniem przyjaznych dla użytkownika interfejsów, każdy projekt nauczył mnie czegoś nowego i pomógł mi się rozwijać.",areasTitle:"Obszary, w których miałem okazję pracować",contactMe:"Kontakt",technologyIcons:[{name:"mdi-language-cpp",title:"C++17/20"},{name:"mdi-widgets",title:"Qt 6 Framework"},{name:"mdi-language-go",title:"Go"},{name:"mdi-docker",title:"Docker"},{name:"mdi-language-python",title:"Python"},{name:"mdi-nodejs",title:"Node.js"},{name:"mdi-vuejs",title:"Vue.js"},{name:"mdi-database",title:"MongoDB, SQLite"},{name:"mdi-code-json",title:"JSON/APIs"},{name:"mdi-lightning-bolt",title:"MQTT, ZeroMQ"},{name:"mdi-memory",title:"Systemy Niskopoziomowe"},{name:"mdi-cogs",title:"CMake, vcpkg"}],knowledgeCards:[{id:"systemArchitecture",title:"Architektura Systemów",description:"Pracowałem nad skalowalnymi, modułowymi systemami elektrowni. Zajmuję się systemami rozproszonymi, mikrousługami i architekturą sterowaną zdarzeniami, które stawiają na pierwszym miejscu niezawodność i wydajność w środowiskach o znaczeniu krytycznym.",benefits:"Umiejętności Techniczne:",benefitsDesc:"C++17/20, Go, programowanie sterowane zdarzeniami, projektowanie mikroserwisów, programowanie współbieżne, architektury pamięci współdzielonej, konteneryzacja Docker",icon:"mdi-hexagon-multiple"},{id:"dataEngineering",title:"Zarządzanie Danymi",description:"Stworzyłem i wdrożyłem systemy do gromadzenia, przetwarzania i przechowywania danych przemysłowych z seriami czasowymi. Moje rozwiązania obejmują efektywne metody przechowywania zarówno bieżących, jak i historycznych danych, a także zapewniają wysoką integralność danych.",benefits:"Umiejętności Techniczne:",benefitsDesc:"Projektowanie baz danych (SQL i NoSQL), niestandardowe mechanizmy pamięci mapowanej w plikach, obsługa danych szeregów czasowych, wielowątkowe wzorce dostępu do danych, MongoDB, SQLite, ObjectBox",icon:"mdi-database"},{id:"uiDevelopment",title:"Rozwój Interfejsów",description:"Wykorzystywałem technologie desktopowe i internetowe do tworzenia interfejsów graficznych dla systemów przemysłowych. Interfejsy te umożliwiają operatorom przeglądanie skomplikowanych procesów, konfigurowanie systemów i pracę z danymi pochodzącymi z urządzeń.",benefits:"Umiejętności Techniczne:",benefitsDesc:"Qt, MFC, Vue.js, implementacje Model-View-Controller, rozwój aplikacji wieloplatformowych, BCGControlBar Pro, internacjonalizacja (i18n)",icon:"mdi-monitor-dashboard"},{id:"communicationProtocols",title:"Systemy Komunikacyjne",description:"Wykorzystywałem różne protokoły komunikacyjne do wysyłania i odbierania danych w czasie rzeczywistym w środowisku przemysłowym. Dbam o to, aby urządzenia terenowe, usługi zaplecza i interfejsy użytkownika mogły współpracować w bezpieczny i wydajny sposób.",benefits:"Umiejętności Techniczne:",benefitsDesc:"MQTT, ZeroMQ, WebSockety, REST API, protokoły przemysłowe (Modbus, IEC104, Siemens S7), sieci TCP/IP, bezpieczne projektowanie API (JWT)",icon:"mdi-access-point-network"},{id:"systemIntegration",title:"Integracja Systemów",description:"Specjalizuję się w łączeniu starych systemów przemysłowych z nowymi technologiami. W ramach mojej pracy integracyjnej konwertuję formaty binarne, tłumaczę protokoły i tworzę komponenty pośredniczące, które mogą ze sobą współpracować.",benefits:"Umiejętności Techniczne:",benefitsDesc:"Integracja C#/.NET z kodem natywnym, systemy wielojęzyczne (C++/Go/C#), deserializacja binarna, konwersja kodowania znaków, rozwój bramek API",icon:"mdi-puzzle"}]},y={title:"Moja Praca",projectsTitle:"Projekty",experienceTitle:"Doświadczenie",pageTitle:"Tworzenie Oprogramowania Przemysłowego",pageSubtitle:"Solidne oprogramowanie dla systemów danych, automatyki i infrastruktury krytycznej",btnDetails:"Szczegóły",btnClose:"Zamknij",keyFeatures:"Kluczowe funkcje:",technologiesUsed:"Wykorzystane technologie:",projectSize:"Rozmiar projektu:",sizes:{large:"Duży",medium:"Średni",small:"Mały"},sizeTooltips:{large:"Złożony projekt o szerokim zakresie i wielu komponentach",medium:"Umiarkowana złożoność z wyważonym nakładem pracy",small:"Projekt o zawężonym zakresie i określonym celu"},difficultyScale:"Ocena złożoności projektu (1-3)",sizeNotSpecified:"Rozmiar nieokreślony",sizeNotSpecifiedTooltip:"Informacja o rozmiarze projektu nie jest dostępna",categories:{softwareFramework:"Framework Programowy",dataSystems:"Systemy Danych",iotEdge:"IoT i Edge",apiIntegration:"API i Integracja",modernization:"Modernizacja",realTimeSystems:"Systemy Czasu Rzeczywistego",industrialSolutions:"Rozwiązania Przemysłowe"},projects:[{title:"System SCADA",tech:"C++20, Qt 6, Architektura Sterowana Zdarzeniami",keywords:"Sterowanie w Czasie Rzeczywistym, MQTT, ZeroMQ, Zarządzanie Alarmami, Bezpieczeństwo Wątków",description:"Pomogłem stworzyć modułowy system sterowania i monitorowania automatyki przemysłowej. System niezawodnie obsługuje sygnały binarne i analogowe dzięki architekturze opartej na zdarzeniach. Posiada narzędzia do zarządzania alarmami, dynamicznej konfiguracji i wizualizacji procesów przemysłowych.",size:"large",keyFeatures:[{title:"Architektura Sterowana Zdarzeniami",desc:"Aby zapewnić niezawodność systemu, pracowałem nad przetwarzaniem sygnałów przy użyciu walidacji, parsowania i kolejkowania."},{title:"Komunikacja w Czasie Rzeczywistym",desc:"Wdrożenie protokołów MQTT i ZeroMQ w celu ułatwienia komunikacji między urządzeniami terenowymi a serwerami zaplecza."},{title:"Dynamiczna Konfiguracja",desc:"Przyczyniłem się do opracowania funkcji umożliwiającej ładowanie konfiguracji bez przerywania pracy systemu z pamięci współdzielonej i plików projektu."},{title:"Zarządzanie Alarmami",desc:"Opracowałem logikę wykorzystującą konfigurowalne progi i zmiany stanu do identyfikowania nieprawidłowych warunków i ostrzegania użytkowników."}],technologies:"C++20, Qt 6 (Widgets, Core, Network, SQL, Charts), BCGControlBar Pro, Boost (asio, serialization, fusion, interprocess, thread), Poco, MQTT (mosquitto), ZeroMQ, nlohmann::json, MongoDB C++ Driver, CMake, vcpkg"},{title:"System Akwizycji i Archiwizacji Danych dla Elektrowni",tech:"C++20, Boost, Pamięć Współdzielona, Pamięć Mapowana w Pliku",keywords:"Akwizycja Danych, Indeksowanie, Bezpieczeństwo Wątków, Elektrownia",description:"Przyczyniłem się do stworzenia systemu opartego na C++20 do gromadzenia i przechowywania danych pomiarowych z elektrowni. System został zaprojektowany tak, aby działał dobrze zarówno w trybie czasu rzeczywistego, jak i historycznym, zachowując integralność danych.",size:"large",keyFeatures:[{title:"Akwizycja Danych",desc:"Opracowano interfejsy z czujnikami elektrowni i systemami sterowania w celu skutecznego gromadzenia pomiarów analogowych i cyfrowych."},{title:"Architektura Pamięci Współdzielonej",desc:"Współdzielona pamięć umożliwia jednoczesny dostęp do danych przez kilka procesów (pozyskiwanie, archiwizacja i wizualizacja)."},{title:"Rozwiązanie Archiwizacji",desc:"Dane szeregów czasowych były przechowywane przy użyciu metody mapowania plików, aby ułatwić szybkie wyszukiwanie według okresu czasu."},{title:"Integralność Danych",desc:"Dodano funkcje odzyskiwania danych i dodatkowe procedury walidacji, aby pomóc w ochronie ważnych danych operacyjnych."}],technologies:"C++20, Boost (Interprocess, Asio, DateTime), Poco (Net, Util), ZeroMQ (cppzmq), MQTT (Paho), nlohmann::json, Niestandardowa pamięć mapowana w pliku, CMake"},{title:"Rozproszony System SCADA",tech:"C++20, Go, Docker, Mikroserwisy",keywords:"Modernizacja Danych Starszych Systemów, Konteneryzacja, Bezpieczne API, SQLite, ObjectBox",description:"Przyczyniłem się do rozwoju platformy komunikacyjnej, która łączy współczesne i starsze systemy. Obejmowało to backend oparty na Poco oraz usługę C++ do obsługi starszych danych, z naciskiem na zapewnienie dobrej współpracy komponentów.",size:"large",keyFeatures:[{title:"Obsługa Starszych Danych",desc:"Opracowałem program C++20 do tłumaczenia kodowania znaków w starszych plikach danych przemysłowych i konwersji ich do bardziej współczesnych formatów."},{title:"Podejście Mikroserwisowe",desc:"Pomoc w podziale platformy na odrębne usługi kontenerowe do komunikacji, przechowywania i funkcji podstawowych."},{title:"Rozwój API",desc:"Opracowanie interfejsów API RESTful z obsługą WebSocket do aktualizacji w czasie rzeczywistym i uwierzytelniania przy użyciu JWT i kluczy API."},{title:"Rozwiązania Przechowywania",desc:"Aby osiągnąć równowagę między wymaganiami dotyczącymi elastyczności i wydajności, do rejestrowania zdarzeń użyto ObjectBox, a do ustawień konfiguracyjnych SQLite."}],technologies:"Go (Gin), C++20, Docker, SQLite, ObjectBox, REST API, WebSockets, JWT, Poco, nlohmann::json, OpenAPI/Swagger"},{title:"Edytor Graficzny do Schematów SCADA",tech:"C++17, Qt, Boost, Architektura Model-Widok",keywords:"Framework Przemysłowy, Architektura Komponentowa, Wieloplatformowość",description:"Opracowałem edytor graficzny do interfejsów przemysłowych systemów sterowania. Dzięki intuicyjnemu podejściu do projektowania aplikacja pomaga operatorom w tworzeniu wizualnych reprezentacji ich urządzeń i procesów.",size:"medium",keyFeatures:[{title:"Interaktywna Edycja",desc:"Opracowałem narzędzia do tworzenia i modyfikowania modeli wizualnych, które umożliwiają konfigurację właściwości, grupowanie i manipulowanie."},{title:"Serializacja Danych",desc:"Do implementacji ładowania i zapisywania opartego na XML użyto Boost. Dane projektu będą zachowywane między sesjami dzięki PropertyTree."},{title:"Obsługa Wielu Platform",desc:"Pomogłem w zapewnieniu niezawodnego działania programu zarówno na specjalistycznych platformach wbudowanych, jak i systemach Windows."},{title:"Czysta Architektura",desc:"Wykorzystano wzorce projektowe Model-View, aby podzielić problemy i ułatwić utrzymanie kodu."}],technologies:"C++17, Qt (Widgets, Signals & Slots), Boost (Bimap, MPL, Serialization, Lexical_Cast, Algorithm), CMake, vcpkg"},{title:"Warstwa Pośrednia API dla Łączenia REST i Protokołu Własnościowego",tech:".NET Framework, C#, Interoperacyjność Natywna",keywords:"Most REST, Protokół Własnościowy, Komunikacja z Urządzeniami",description:"Stworzyłem rozwiązanie typu middleware, które łączy nowoczesne aplikacje internetowe ze specjalistycznymi systemami przemysłowymi wykorzystującymi własne protokoły. API tłumaczy standardowe żądania REST na konkretne metody komunikacji wymagane przez sprzęt.",size:"small",keyFeatures:[{title:"Integracja Natywna",desc:"Wykorzystałem P/Invoke do połączenia kodu .NET z istniejącymi bibliotekami urządzeń C++, co pozwala na wydajną wymianę danych."},{title:"Konfigurowalne Połączenia",desc:"Opracowałem system do zarządzania ustawieniami połączeń za pomocą pliku Web.config, co pozwala na elastyczne wdrażanie w różnych środowiskach."},{title:"Mapowanie Struktur Danych",desc:"Opracowano reprezentacje natywnych struktur danych w języku C# z odpowiednim marshallingiem w celu zachowania kompatybilności."},{title:"Zoptymalizowana Obsługa Danych",desc:"Wdrożono przetwarzanie wsadowe sygnałów w celu poprawy wydajności podczas pracy z dużymi zbiorami danych."}],technologies:".NET Framework 4.8, C#, ASP.NET Web API, P/Invoke, Microsoft SQL Server, MariaDB/MySQL, Web.config"},{title:"Narzędzie do Eksploracji Baz Danych",tech:"C++20, MFC, BCGControlBar Pro, SQLite",keywords:"Zarządzanie Bazami Danych, Edytor SQL, Wizualizacja Danych, Architektura MDI",description:"Opracowałem aplikację desktopową ułatwiającą interakcję z bazą danych SQLite. Dzięki interfejsowi umożliwiającemu pracę z wieloma widokami bazy danych jednocześnie, narzędzie to oferuje łatwą w użyciu metodę przeglądania danych, uruchamiania zapytań i wizualizacji wyników.",size:"medium",keyFeatures:[{title:"Interfejs Wielodokumentowy",desc:"Opracowałem interfejs, który umożliwia użytkownikom manipulowanie wynikami zapytań, tabelami i wykresami w różnych oknach aplikacji."},{title:"Menedżer Połączeń z Bazą Danych",desc:"Opracowałem funkcje do przechowywania i kontrolowania konfiguracji połączeń z bazą danych w celu ułatwienia dostępu do różnych źródeł danych."},{title:"Edytor Zapytań SQL",desc:"Aby poprawić wydajność pisania zapytań, dodano edytor kodu z przydatnymi funkcjami, takimi jak podświetlanie składni i sugestie."},{title:"Elastyczna Architektura",desc:"Aby poprawić łatwość konserwacji, kod został uporządkowany w taki sposób, aby podzielić dostęp do danych, logikę biznesową i komponenty interfejsu użytkownika."}],technologies:"C++20, MFC (Microsoft Foundation Classes), BCGControlBar Pro, SQLite, WinSock, Visual Studio 2022"},{title:"Modularna Platforma Akwizycji Danych",tech:"C++17/20, Node.js, Vue.js, Docker, Mikroserwisy",keywords:"Integracja Protokołów, Edge Computing, Mikroserwisy, Frontend SPA, DevOps",description:"Pomogłem opracować system, który gromadzi i analizuje dane z maszyn przemysłowych. Platforma łączy wiele technologii, zapewniając nowoczesny interfejs monitorowania i wszechstronne rozwiązanie, które można dostosować do różnych wymagań pomiarowych.",size:"large",keyFeatures:[{title:"Projekt Rozproszony",desc:"Pomogłem wdrożyć system współdziałających usług kontenerowych, które komunikują się ze sobą za pośrednictwem ZeroMQ."},{title:"Integracja ze Sprzętem",desc:"Opracowano adaptery protokołów C++ do łączenia się z różnymi typami urządzeń przemysłowych za pomocą standardowych i unikalnych protokołów."},{title:"Usługi Backendowe",desc:"Opracowałem serwer Node.js, który oferuje API konfiguracji i dostępu do danych z odpowiednimi kontrolami bezpieczeństwa."},{title:"Interfejs Użytkownika",desc:"Za pomocą Vue.js opracowano oparty na przeglądarce pulpit nawigacyjny, który wyświetla dane w czasie rzeczywistym i umożliwia zarządzanie systemem."}],technologies:"C++17/20, Node.js (TypeScript, Express), Vue.js, Pinia, Bootstrap-Vue, ECharts, SQLite, MongoDB, RethinkDB, ZeroMQ, Docker, Snap7, libmodbus, JWT, WebSockets"}]},w={title:"Mój Stos Technologiczny",frontendTitle:"Frontend",backendTitle:"Backend",databaseTitle:"Bazy danych",toolsTitle:"Narzędzia i DevOps",pageTitle:"Stos Technologiczny i Ekspertyza",introduction:"Jako programista moim głównym celem jest tworzenie niezawodnych, wydajnych rozwiązań. Pracowałem nad tworzeniem wieloplatformowych interfejsów graficznych, architekturą sterowaną zdarzeniami, systemami pamięci współdzielonej oraz nowoczesnym językiem C++ (C++20/17). Miałem okazję wdrożyć skuteczne rozwiązania w zakresie archiwizacji danych oraz stworzyć systemy rozproszone z możliwością komunikacji w czasie rzeczywistym. Poniżej przedstawiam zarys moich kluczowych kompetencji i stosowanych technologii. Umiejętności te doskonaliłem podczas realizacji różnych projektów związanych z tworzeniem oprogramowania, takich jak rozproszone systemy sterowania, aplikacje wieloplatformowe oraz rozwiązania do gromadzenia i archiwizacji danych.",skillCards:[{id:"coreLanguages",title:"Podstawowe Języki Programowania",skills:[{id:"cpp",name:"C++20 / C++17",description:"Wysokowydajne, bezpieczne typowo, współczesne programowanie systemowe"},{id:"csharp",name:"C#",description:"Natywne interop, projektowanie API i integracja",subSkills:[{id:"aspNetWebApi",name:"ASP.NET Web API",description:"Tworzenie usług RESTful"}]},{id:"typescript",name:"TypeScript / JavaScript",description:"Rozwój aplikacji full-stack, w tym SPA (Vue 2/3, Quasar, Bootstrap) i usługi backendowe Node.js"},{id:"python",name:"Python",description:"Usługi backendowe do ogólnego automatyzowania skryptów, symulacji"},{id:"nodejs",name:"Node.js",description:"Rozwój backendu dla mikrousług, aplikacji działających w czasie rzeczywistym i usług API, zwłaszcza dla platform Internetu rzeczy"},{id:"golang",name:"Go (Golang)",description:"Rozwój backendu dla systemów rozproszonych i architektury mikroserwisów"}]},{id:"frameworks",title:"Kluczowe Frameworki i Biblioteki",skills:[{id:"qt",name:"Qt (Widgets, Signals/Slots)",description:"Wieloplatformowy GUI, wizualizacja i interakcja użytkownika dla przemysłowych paneli sterowania"},{id:"boost",name:"Biblioteki Boost",subSkills:[{id:"asio",name:"boost::asio",description:"Asynchroniczne I/O, sieci i korutyny"},{id:"serialization",name:"boost::serialization",description:"Serializacja obiektów i konstrukcja stosu kontenerów STL"},{id:"interprocess",name:"boost::interprocess",description:"Pamięć współdzielona i synchronizacja międzyprocesowa"},{id:"fusion",name:"boost::fusion, boost::mpl",description:"Heterogeniczne kontenery i metaprogramowanie"},{id:"thread",name:"boost::thread / boost::mutex",description:"Wątki i prymitywy synchronizacji"},{id:"container",name:"boost::container",description:"Kontenery kompatybilne ze STL"},{id:"bimap",name:"Boost.Bimap",description:"Dwukierunkowe mapy dla wydajnych wyszukiwań klucz-wartość"},{id:"lexicalCast",name:"Boost.Lexical_Cast",description:"Bezpieczne konwersje typów między ciągami znaków a innymi typami"},{id:"algorithm",name:"Boost.Algorithm",description:"Zbiór ogólnych algorytmów dla C++"},{id:"multiIndex",name:"boost::multi_index",description:"Kontenery z wieloma kryteriami wyszukiwania i sortowania"},{id:"propertyTree",name:"Boost.PropertyTree",description:"Przechowywanie i manipulowanie danymi hierarchicznymi, szczególnie serializacja XML"},{id:"dateTime",name:"Boost.DateTime",description:"Manipulacja i obliczenia dat i czasu"}]},{id:"json",name:"nlohmann::json",description:"Nowoczesne parsowanie i serializacja JSON w C++"},{id:"poco",name:"Framework Poco",description:"Wątki, sieci, serwery HTTP/WebSocket, integracja MQTT i abstrakcja bazy danych"},{id:"messaging",name:"Systemy Komunikacyjne",subSkills:[{id:"zeromq",name:"ZeroMQ (zmq, cppzmq)",description:"Wysokowydajne asynchroniczne komunikaty z wzorcami jak DEALER/ROUTER"},{id:"mqtt",name:"MQTT (mosqpp, Paho)",description:"Protokół komunikacyjny publikuj/subskrybuj z integracją Mosquitto C++"}]},{id:"mongodb",name:"Sterownik MongoDB C++ (mongocxx)",description:"Integracja z bazą danych NoSQL"},{id:"openssl",name:"OpenSSL",description:"Bezpieczna komunikacja i asynchroniczne operacje kryptograficzne"},{id:"iconvpp",name:"iconvpp",description:"Konwersje kodowania znaków dla integracji z systemami legacy (CP852 do UTF-8)"},{id:"sqlite",name:"SQLite z Poco Data",description:"Wbudowana baza danych z funkcjami podobnymi do ORM dla zarządzania konfiguracją"},{id:"mfc",name:"MFC (Microsoft Foundation Classes)",description:"Rozwój aplikacji desktopowych Windows z architekturą MDI"},{id:"bcgControlBar",name:"BCGControlBar Pro",description:"Zaawansowane komponenty UI dla aplikacji MFC, w tym wstążki i panele dokowalne"},{id:"objectBox",name:"ObjectBox",description:"Wysokowydajne logowanie zdarzeń i wbudowana baza danych"},{id:"rethinkDb",name:"RethinkDB",description:"Opcjonalna baza danych NoSQL dla aplikacji czasu rzeczywistego"},{id:"eCharts",name:"ECharts",description:"Biblioteka wizualizacji danych dla pulpitów nawigacyjnych"},{id:"snap7",name:"Snap7",description:"Biblioteka protokołu Siemens S7 do komunikacji przemysłowej"},{id:"libmodbus",name:"libmodbus",description:"Biblioteka protokołu Modbus TCP dla urządzeń przemysłowych"},{id:"proster",name:"Proster",description:"Niestandardowy protokół do integracji sprzętu przemysłowego"},{id:"fabric",name:"Fabric (Python)",description:"Skrypty automatyzacji do wdrażania i zarządzania usługami"},{id:"systemd",name:"systemd",description:"Zarządzanie usługami w środowiskach Linux"},{id:"bootstrapVue",name:"Bootstrap-Vue",description:"Framework frontendowy do responsywnego projektowania w aplikacjach Vue.js"},{id:"pinia",name:"Pinia",description:"Biblioteka zarządzania stanem dla aplikacji Vue.js"},{id:"expressJs",name:"Express.js",description:"Framework webowy dla Node.js, używany do budowania API"},{id:"socketIo",name:"Socket.IO",description:"Biblioteka do komunikacji dwukierunkowej w czasie rzeczywistym"},{id:"ginGolang",name:"Gin (Go)",description:"Framework HTTP dla budowania API w Go"}]},{id:"architecture",title:"Umiejętności Architektoniczne i Techniczne",skills:[{id:"eventDriven",name:"Architektura Sterowana Zdarzeniami",description:"Projektowanie i wdrażanie systemów, które skutecznie obsługują, filtrują i przetwarzają sygnały analogowe i binarne, nazywane jest architekturą sterowaną zdarzeniami"},{id:"realTime",name:"Komunikacja w Czasie Rzeczywistym",description:"Wykorzystanie protokołów komunikacyjnych do szybkiego gromadzenia danych, wysyłania poleceń i odbierania powiadomień o zdarzeniach"},{id:"multithreading",name:"Wielowątkowość i Współbieżność",description:"Wykorzystanie muteksów, blokad zakresu, zmiennych warunkowych i operacji atomowych do zarządzania zasobami w sposób bezpieczny dla wątków"},{id:"sharedMemory",name:"Architektura Pamięci Współdzielonej",description:"Wdrażanie wysokowydajnych segmentów pamięci współdzielonej, aby umożliwić wielu procesom szybki i współbieżny dostęp do danych w czasie rzeczywistym, znane jest jako architektura pamięci współdzielonej"},{id:"fileMapped",name:"Pamięć Mapowana na Plik",description:"Indeksowanie niestandardowe mapowane na pliki w celu efektywnej archiwizacji znacznych ilości danych szeregów czasowych nazywane jest przechowywaniem mapowanym na pliki."},{id:"dynamicConfig",name:"Dynamiczna Konfiguracja",description:"Możliwość ładowania i zarządzania informacjami konfiguracyjnymi z plików projektu i pamięci współdzielonej"},{id:"eventManagement",name:"Zarządzanie Zdarzeniami i Alarmami",description:"Wykorzystanie zaawansowanej logiki do identyfikacji stanów alarmowych na podstawie progów i przejść między stanami nazywane jest zarządzaniem zdarzeniami i alarmami"},{id:"serialization",name:"Serializacja i Konwersja Danych",description:"Konwersja i serializacja danych, w tym deseryalizacja binarna i mapowanie struktur C, to procesy, które przekształcają stare dane binarne w współczesne dane strukturalne"},{id:"protocol",name:"Integracja Protokółów",description:"Obsługa wielu protokołów (Modbus, Siemens, IEC104, SNMP, OPC UA) oraz tworzenie protokołów niestandardowych to przykłady integracji protokołów"},{id:"dataIntegrity",name:"Integralność i Odzyskiwanie Danych",description:"Odzyskiwanie danych i integralność Metody odzyskiwania, tworzenia kopii zapasowych i walidacji danych w aplikacjach o znaczeniu krytycznym"},{id:"crossPlatform",name:"Rozwój Wieloplatformowy",description:"Projektowanie kodu dla platform wbudowanych (Compute Module), Linux i Windows"},{id:"microservices",name:"Architektura Mikroserwisów",description:"Projektowanie luźno powiązanych usług, z których każda jest zawarta w Dockerze w celu zapewnienia skalowalności i łatwości konserwacji, znane jest jako architektura mikrousług"},{id:"secureApis",name:"Projektowanie Bezpiecznych API",description:'Wdrażanie interfejsów API RESTful z uwierzytelnianiem JWT i zabezpieczeniami klucza API znane jest jako "bezpieczne projektowanie API"'},{id:"modelView",name:"Architektura Model-Widok",description:"Modele danych, widoki i logika kontrolera są oddzielone w architekturze model-widok w celu poprawy łatwości konserwacji."},{id:"nativeInterop",name:"Natywna Interoperacyjność",description:"Wywoływanie natywnych funkcji C++ z zarządzanego kodu C# przy użyciu P/Invoke (DllImport)"}]},{id:"build",title:"Budowa, Narzędzia i DevOps",skills:[{id:"cmake",name:"CMake",description:"Wieloplatformowy system budowania i konfiguracji projektu"},{id:"vcpkg",name:"vcpkg",description:"Menedżer pakietów C++ do instalowania i zarządzania zależnościami"},{id:"vs",name:"Visual Studio 2022",description:"Główne IDE do rozwoju w C++/C#"},{id:"platformSpecific",name:"Integracja Specyficzna dla Platformy",description:"Doświadczenie z Windows API w zakresie zarządzania plikami i procesami, wątkowaniem i rejestrowaniem zdarzeń"},{id:"docker",name:"Docker",description:"Konteneryzacja dla spójnego wdrażania i izolacji usług"},{id:"devcontainers",name:"VS Code Devcontainers",description:"Spójne i odtwarzalne środowiska programistyczne przy użyciu Dockera"},{id:"swagger",name:"Swagger/OpenAPI",description:"Dokumentacja i specyfikacja API"},{id:"cicd",name:"Potoki CI/CD",description:"Ciągła integracja i wdrażanie"},{id:"powershell",name:"PowerShell",description:"Skrypty dla środowisk Windows i automatyzacji"},{id:"make",name:"Make",description:"Narzędzie automatyzacji budowania dla środowisk Linux/Unix"}]},{id:"domain",title:"Wiedza branżowa",skills:[{id:"softwareArch",name:"Architektura Oprogramowania",description:"Tworzenie niezawodnych, modułowych systemów do kontroli i monitorowania w czasie rzeczywistym"},{id:"dataAcquisition",name:"Akwizycja Danych",description:"Projektowanie wysokowydajnych systemów do niezawodnego gromadzenia, przetwarzania i długoterminowej archiwizacji danych pomiarowych nazywane jest akwizycją danych"},{id:"appDev",name:"Rozwój Aplikacji",description:"Tworzenie aplikacji to proces wdrażania rozwiązań"},{id:"legacy",name:"Modernizacja Systemów Legacy",description:"Konwersja starszych plików danych do współczesnych, ustrukturyzowanych formatów z tłumaczeniem kodowania znaków nazywana jest modernizacją systemu"},{id:"visualization",name:"Narzędzia Wizualizacji",description:"Opracowywanie edytorów graficznych do wizualizacji danych, paneli sterowania i diagramów procesów"},{id:"secure",name:"Bezpieczne Systemy",description:"Wdrażanie zabezpieczonych przed manipulacją, bezpiecznych magazynów danych, spełniających standardy audytu i zgodności"},{id:"crossPlatformDev",name:"Rozwój Wieloplatformowy",description:"Tworzenie wieloplatformowych systemów wizualizacji i sterowania"},{id:"dataManagement",name:"Zarządzanie Danymi",description:"Specjalistyczne systemy do gromadzenia i śledzenia danych"},{id:"industrialProtocols",name:"Integracja Protokołów Przemysłowych",description:"Doświadczenie w integracji sprzętu i protokołów komunikacji przemysłowej"},{id:"databaseSystems",name:"Projektowanie Systemów Bazodanowych",description:"Projektowanie systemów baz danych obejmuje tworzenie interfejsów zapytań i narzędzi do eksploracji baz danych"}]},{id:"projects",title:"Kluczowe Projekty",skills:[{id:"scada",name:"System SCADA",description:"wykorzystano C++20 do stworzenia modułowego systemu sterowania i monitorowania automatyki przemysłowej działającego w czasie rzeczywistym. Funkcje obejmują obsługę danych bezpieczną dla wątków, dynamiczną konfigurację, zarządzanie alarmami, architekturę przetwarzania sygnałów sterowaną zdarzeniami, komunikację w czasie rzeczywistym poprzez MQTT i ZeroMQ oraz graficzny interfejs użytkownika (GUI) oparty na Qt z możliwościami wizualizacji"},{id:"dataAcquisition",name:"System Akwizycji i Archiwizacji Danych",description:"opracowano system C++20 do gromadzenia, analizowania i przechowywania danych pomiarowych elektrowni w dłuższym okresie czasu. Solidne procedury integralności danych, pamięć mapowana na pliki do archiwizacji danych szeregów czasowych, architektura pamięci współdzielonej do równoczesnego dostępu do danych oraz dokładne indeksowanie do szybkiego wyszukiwania w zakresie czasu"},{id:"distributed",name:"Rozproszony System SCADA",description:"zaprojektowano skalowalną platformę wykorzystującą backend Go i usługę pozyskiwania danych C++20. Niektóre z najważniejszych funkcji to: deseryalizacja binarna do modernizacji starszych danych, konteneryzacja Docker do architektury mikrousług, JWT do bezpiecznych interfejsów API, SQLite i ObjectBox do wbudowanej pamięci oraz OpenAPI/Swagger do automatycznej dokumentacji"},{id:"visualization",name:"Edytor Graficzny dla Schematów SCADA",description:"opracowano wieloplatformowy edytor graficzny C++17 dla przemysłowych interfejsów sterowania. Program zawiera edytor modeli do tworzenia diagramów procesów i paneli sterowania, a także Boost do serializacji XML. Architektura Model-View, PropertyTree i kompatybilność wieloplatformowa"},{id:"middleware",name:"Middleware API dla Łączenia Protokołów",description:"opracowano oprogramowanie pośredniczące A.NET Web API pomiędzy interfejsami RESTful a protokołami zastrzeżonymi jako oprogramowanie pośredniczące API do mostkowania protokołów. Wśród funkcji znajdują się dynamiczna konfiguracja, marshalling struktur danych, zoptymalizowane przetwarzanie wsadowe, solidne zarządzanie zasobami oraz natywna interoperacyjność C++ poprzez P/Invoke"},{id:"databaseTool",name:"Narzędzie do Eksploracji Baz Danych",description:"przy użyciu MFC stworzono aplikację desktopową C++20 dla systemu Windows do zarządzania bazami danych SQLite. Narzędzie zawiera funkcje wizualizacji danych, zarządzanie połączeniami z bazami danych, zintegrowany edytor SQL, interfejs Multi-Document Interface do wielu widoków oraz zaawansowane elementy interfejsu użytkownika poprzez BCGControlBar Pro"},{id:"modularPlatform",name:"Modularna Platforma Akwizycji Danych",description:"zaprojektowano system gromadzenia danych przemysłowych oparty na mikrousługach. Rozwiązanie obejmuje integrację wielu protokołów (S7, Modbus, Proster), warstwę API TypeScript/Express.js, pamięć MongoDB i SQLite, usługi C++, Node.js i Python oraz pulpit nawigacyjny Vue.js z wizualizacją w czasie rzeczywistym"}]},{id:"softSkills",title:"Umiejętności miękkie i metodologia",skills:[{id:"cleanCode",name:"Czysty, Łatwy do Utrzymania Kod",description:"Kod źródłowy jest podzielony na odrębne moduły zgodnie z najlepszymi praktykami dotyczącymi rozdzielenia zagadnień"},{id:"modernCpp",name:"Nowoczesne C++ Funkcje",description:"Biegłość w wykorzystywaniu inteligentnych wskaźników, bezpieczeństwa typów, constexpr i innych współczesnych funkcji języka C++ w celu zwiększenia bezpieczeństwa kodu"},{id:"modular",name:"Modularna Architektura",description:"Projektowanie rozszerzalnych systemów, które można modyfikować w celu dostosowania do nowych potrzeb, znane jest jako architektura modułowa"},{id:"reliability",name:"Skupienie na Niezawodności",description:"Wdrażanie kompleksowych procedur obsługi błędów, rejestrowania i odzyskiwania systemu jest podstawą niezawodności"},{id:"performance",name:"Optymalizacja Wydajności",description:"Doświadczenie w zakresie systemów o niskim opóźnieniu i wysokiej wydajności dla aplikacji działających w czasie rzeczywistym"},{id:"ux",name:"Doświadczenie Użytkownika",description:"Tworzenie przyjaznych dla użytkownika interfejsów dla zaawansowanych programów komputerowych"},{id:"learning",name:"Ciągłe Uczenie się",description:"Dostosowywanie się do najlepszych praktyk i nowych technologii w szybko zmieniających się ekosystemach"},{id:"crossDisciplinary",name:"Integracja Międzydyscyplinarna",description:"Zdolność do współpracy między różnymi platformami i językami programowania w celu tworzenia spójnych rozwiązań nazywana jest integracją międzydyscyplinarną"}]}]},u={title:"Moje kreatywne projekty i autorskie treści",description:"Poznaj projekty i materiały, które wykonałem, by wyrazić swoją kreatywność i pasję do technologii.",sections:{articles:"Artykuły i Zasoby",applications:"Projekty"},articles:{title:"Artykuły i Zasoby",description:"Wszechstronne artykuły i łatwe w użyciu podręczniki referencyjne dotyczące szeregu metodologii i rozwiązań programistycznych.",entries:[{title:"Zdalny GDB dla Raspberry Pi",description:"Konfiguracja zdalnego debugowania z GDB dla Raspberry Pi Compute Module 4.",topics:["Konfiguracja środowiska","Konfiguracja","Rozwiązywanie problemów"],link:"https://pisanie.dev/cheetsheets/RemoteGDB/%C5%9Brodowisko-i-konfiguracja.html",language:"polish"},{title:"Wprowadzenie do programowania w C",description:"Kompleksowy przewodnik po podstawach programowania w C.",topics:["Składnia","Zarządzanie pamięcią","Biblioteka standardowa"],link:"https://pisanie.dev/wprowadzenie-do-c/",language:"polish"}]},applications:{title:"Projekty",description:"Projekty i implementacje kodu, które opracowałem w celu rozwiązania różnych wyzwań.",entries:[{title:"TypeScript z komponentami blokowymi Vuetify 3",description:"Budowanie interfejsów opartych na blokach z TypeScript i Vuetify 3.",technologies:["Vue 3","TypeScript","Vuetify 3","Vite","Emscripten","WebAssembly","Vitest","ESLint","Prettier","Monorepo"],topics:["Architektura komponentów","Integracja TypeScript","Responsywny design","Integracja WebAssembly","Narzędzia Monorepo","Testowanie i linting"],link:"https://pisanie.dev/ts-vuetify3-blocks-vm/"},{title:"Projekty 3D Thingiverse",description:"Kolekcja moich autorskich modeli 3D do druku opublikowanych na platformie Thingiverse.",technologies:["Blender","Modelowanie 3D","Ultimaker","Druk 3D"],topics:["Funkcjonalne przedmioty domowe i gadżety","Kreatywne rozwiązania codziennych problemów","Projekty open-source dla społeczności","Zoptymalizowane pod kątem druku 3D FDM"],link:"https://www.thingiverse.com/asuracodes/designs"}]},languages:{english:{name:"Angielski",flag:"🇬🇧"},polish:{name:"Polski",flag:"🇵🇱"},spanish:{name:"Hiszpański",flag:"🇪🇸"},german:{name:"Niemiecki",flag:"🇩🇪"},french:{name:"Francuski",flag:"🇫🇷"}},viewResource:"Zobacz zasób",viewProject:"Zobacz projekt",viewOnGitHub:"Zobacz na GitHub"},z={title:"Kontakt",resumeTitle:"CV",formTitle:"Skontaktuj się",nameLabel:"Imię",emailLabel:"Email",messageLabel:"Wiadomość",submitButton:"Wyślij wiadomość",thankYouMessage:"Dziękuję za twoją wiadomość!",errorMessage:"Wystąpił błąd. Spróbuj ponownie później.",redirectInfo:"Po kliknięciu zostaniesz przekierowany do Google Forms, aby dokończyć wysyłanie wiadomości.",facebookCaption:"@asuracodes.site",linkedinCaption:"/in/asuracodes",githubCaption:"/Asura-Codes"},g={failed:i.failed,success:i.success,common:i,nav:m,footer:l,home:p,work:y,stack:w,github:u,contact:z},k={"en-US":d,"pl-PL":g};export{k as m};
